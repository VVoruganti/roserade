[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "roserade"
version = "0.1.0"
description = "A CLI tool for indexing and chunking local documents with Ollama and sqlite-vec"
authors = [{name = "Your Name", email = "your.email@example.com"}]
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
keywords = ["cli", "documents", "indexing", "rag", "ollama", "sqlite", "pokemon"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "click>=8.0.0",
    "pydantic>=2.5.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "rich>=13.0.0",
    "tqdm>=4.64.0",
    "chonkie>=0.1.0",
    "pdfplumber>=0.10.0",
    "sqlite-vec>=0.0.1",
    "aiohttp>=3.12.14",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
]

[project.scripts]
roserade = "roserade.cli.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/roserade"]

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "UP", # pyupgrade
    "C4", # flake8-comprehensions
    "B",  # flake8-bugbear
]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src/roserade --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["src"]

[dependency-groups]
dev = [
    "factory-boy>=3.3.3",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
]
